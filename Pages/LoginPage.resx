<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>